name: CI con AutoCommit y Documentaci√≥n

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  test-and-update:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend

    steps:
      # 1Ô∏è‚É£ Clonar el repo
      - name: Checkout repo
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Configurar Java 21
      - name: Setup Java
        uses: actions/setup-java@v5
        with:
          java-version: '21'
          distribution: 'temurin'

      # 3Ô∏è‚É£ Instalar Maven
      - name: Instalar Maven
        run: sudo apt-get update && sudo apt-get install -y maven

      # 4Ô∏è‚É£ Configurar Python
      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # 5Ô∏è‚É£ Ejecutar tests
      - name: Ejecutar tests
        run: mvn test

      # 6Ô∏è‚É£ Actualizar README.md y report.md
      - name: Actualizar README.md
        run: python update_readme.py

      # 7Ô∏è‚É£ Generar Javadoc HTML
      - name: Generar Javadoc HTML
        run: mvn clean javadoc:javadoc

      # 8Ô∏è‚É£ Instalar wkhtmltopdf
      - name: Instalar wkhtmltopdf
        run: sudo apt-get install -y wkhtmltopdf

      # 9Ô∏è‚É£ Convertir index.html a PDF
      - name: Generar PDFs individuales del Javadoc
        working-directory: backend
        run: |
          sudo apt-get update && sudo apt-get install -y wkhtmltopdf
          mkdir -p target/reports/pdf
          for html in $(find target/site/apidocs -type f -name "*.html"); do
            relative_path=$(realpath --relative-to=target/site/apidocs "$html")
            pdf_path="target/reports/pdf/${relative_path%.html}.pdf"
            mkdir -p "$(dirname "$pdf_path")"
            echo "Generando $pdf_path..."
            wkhtmltopdf --enable-local-file-access "file://$(pwd)/$html" "$pdf_path"
          done
          
          echo "‚úÖ PDFs generados en target/reports/pdf"

      # üîü Copiar documentaci√≥n a /docs
      - name: Copiar documentaci√≥n HTML y PDF a /docs
        run: |
          cd ..
          rm -rf docs/*
          mkdir -p docs/pdf
          cp -r backend/target/site/apidocs/* docs/
          cp -r backend/target/reports/pdf/* docs/pdf/
          touch docs/.nojekyll

      # 1Ô∏è‚É£1Ô∏è‚É£ Commit autom√°tico
      - name: Commit autom√°tico del README.md, report.md y documentaci√≥n
        run: |
          cd ..
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add README.md backend/report.md docs
          git commit -m "Update README.md, report.md y documentaci√≥n Javadoc" || echo "No hay cambios que commitear"
          git push origin HEAD:${GITHUB_REF#refs/heads/}


      # 1Ô∏è‚É£2Ô∏è‚É£ Publicar en GitHub Pages
      - name: Deploy a GitHub Pages
        uses: Cecilapp/GitHub-Pages-deploy@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          email: aborcru560@g.educaand.es
          build_dir: docs
          branch: gh-pages
          commit_message: "Deploy documentaci√≥n Javadoc"
